
package mtable2.ui;

import java.awt.ScrollPane;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import mtable2.model.TableInfo;

/**
 *
 * @author raitis
 */
public class ToolsJDialog extends javax.swing.JDialog {

    private String selectedFilePath;
    private final IToolsDialog callBack;
    private String delimiter;

    /**
     * Creates new form ToolsJDialog
     */
    public ToolsJDialog(java.awt.Frame parent, boolean modal, IToolsDialog callBack) {
        super(parent, modal);
        this.callBack = callBack;
        initComponents();
        this.delimiter=",";
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnImpOld = new javax.swing.JButton();
        btnExpOld = new javax.swing.JButton();
        btnImpJson = new javax.swing.JButton();
        btnTcpServer = new javax.swing.JButton();
        btnExpJson = new javax.swing.JButton();
        btnTcpClient = new javax.swing.JButton();
        btnExpCSV = new javax.swing.JButton();
        btnImpCSV = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        cmbDelimiter = new javax.swing.JComboBox<>();
        jSeparator1 = new javax.swing.JSeparator();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        btnImpOld.setText("<html><u>Import Old</u></html>");
        btnImpOld.setBorder(null);
        btnImpOld.setBorderPainted(false);
        btnImpOld.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImpOldActionPerformed(evt);
            }
        });

        btnExpOld.setText("<html><u>Export Old</u></html>");
        btnExpOld.setBorder(null);
        btnExpOld.setBorderPainted(false);
        btnExpOld.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExpOldActionPerformed(evt);
            }
        });

        btnImpJson.setText("<html><u>Import Json</u></html>");
        btnImpJson.setBorder(null);
        btnImpJson.setBorderPainted(false);
        btnImpJson.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImpJsonActionPerformed(evt);
            }
        });

        btnTcpServer.setText("<html><u>Tcp Server</u></html>");
        btnTcpServer.setBorder(null);
        btnTcpServer.setBorderPainted(false);
        btnTcpServer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTcpServerActionPerformed(evt);
            }
        });

        btnExpJson.setText("<html><u>Export Json</u></html>");
        btnExpJson.setBorder(null);
        btnExpJson.setBorderPainted(false);
        btnExpJson.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExpJsonActionPerformed(evt);
            }
        });

        btnTcpClient.setText("<html><u>Tcp Client</u></html>");
        btnTcpClient.setBorder(null);
        btnTcpClient.setBorderPainted(false);
        btnTcpClient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTcpClientActionPerformed(evt);
            }
        });

        btnExpCSV.setText("<html><u>Export CSV</u></html>");
        btnExpCSV.setBorder(null);
        btnExpCSV.setBorderPainted(false);
        btnExpCSV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExpCSVActionPerformed(evt);
            }
        });

        btnImpCSV.setText("<html><u>Import CSV</u></html>");
        btnImpCSV.setBorder(null);
        btnImpCSV.setBorderPainted(false);
        btnImpCSV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImpCSVActionPerformed(evt);
            }
        });

        jLabel1.setText("Select CSV Delimiter to use:");

        cmbDelimiter.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { ", - Comma", "t - Tab", "| - Special" }));
        cmbDelimiter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbDelimiterActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnExpJson, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnExpCSV, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnImpCSV, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cmbDelimiter, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnTcpClient, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnImpOld, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnImpJson, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnTcpServer, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnExpOld, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jSeparator1))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnImpOld, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnExpOld, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21)
                .addComponent(btnImpJson, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(btnExpJson, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnTcpServer, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnTcpClient, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnExpCSV, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnImpCSV, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(cmbDelimiter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnImpOldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImpOldActionPerformed
        chooseFile();
        if(callBack!=null && selectedFilePath!=null && !selectedFilePath.isEmpty()){
            setVisible(false);
            callBack.makeOldImport(selectedFilePath);
            
        }
    }//GEN-LAST:event_btnImpOldActionPerformed

    private void btnExpOldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExpOldActionPerformed
       
        chooseFile();
        if(callBack!=null && selectedFilePath!=null && !selectedFilePath.isEmpty()){
            setVisible(false);
            callBack.makeOldExport(selectedFilePath);
          
        }
    }//GEN-LAST:event_btnExpOldActionPerformed

    private void btnImpJsonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImpJsonActionPerformed
        chooseFile();
        if(callBack!=null && selectedFilePath!=null && !selectedFilePath.isEmpty()){
            setVisible(false);
            callBack.makeJsonImport(selectedFilePath);
            
        }
    }//GEN-LAST:event_btnImpJsonActionPerformed

    private void btnTcpServerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTcpServerActionPerformed
        TcpServerJDialog serverDlg = new TcpServerJDialog(null, true, callBack);
        serverDlg.setVisible(true);
    }//GEN-LAST:event_btnTcpServerActionPerformed

    private void btnExpJsonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExpJsonActionPerformed
        chooseFile();
        if(callBack!=null && selectedFilePath!=null && !selectedFilePath.isEmpty()){
            setVisible(false);
            callBack.makeJsonExport(selectedFilePath);
            
        }
    }//GEN-LAST:event_btnExpJsonActionPerformed

    private void btnTcpClientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTcpClientActionPerformed
        TcpClientJDialog clientDlg = new TcpClientJDialog(null, true, callBack);
        clientDlg.setVisible(true);
    }//GEN-LAST:event_btnTcpClientActionPerformed

    private void btnExpCSVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExpCSVActionPerformed
        if(callBack==null) return;
        
        //chooseFile();
        NamesListJDialog namesDlg = new NamesListJDialog(null, true, callBack,delimiter);
        namesDlg.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnExpCSVActionPerformed

    private void btnImpCSVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImpCSVActionPerformed
       chooseFile();
        if(callBack!=null && selectedFilePath!=null && !selectedFilePath.isEmpty()){
            setVisible(false);
            String delim;
            if(delimiter.equals("|")){
             delim= "\\|";
            }else{
             delim= delimiter;
             }
            callBack.makeCSVMTableImport(selectedFilePath,delim);
            
        }
    }//GEN-LAST:event_btnImpCSVActionPerformed

    private void cmbDelimiterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbDelimiterActionPerformed
        int delimiterIdx = cmbDelimiter.getSelectedIndex();
        switch(delimiterIdx){
            case 0:
                this.delimiter= ","; 
                break;
            case 1:
                this.delimiter="\t";
                break;
            case 2:
                this.delimiter="|";
                break;
            default:
                this.delimiter=",";
        }
    }//GEN-LAST:event_cmbDelimiterActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ToolsJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ToolsJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ToolsJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ToolsJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ToolsJDialog dialog = new ToolsJDialog(new javax.swing.JFrame(), true,null);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnExpCSV;
    private javax.swing.JButton btnExpJson;
    private javax.swing.JButton btnExpOld;
    private javax.swing.JButton btnImpCSV;
    private javax.swing.JButton btnImpJson;
    private javax.swing.JButton btnImpOld;
    private javax.swing.JButton btnTcpClient;
    private javax.swing.JButton btnTcpServer;
    private javax.swing.JComboBox<String> cmbDelimiter;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JSeparator jSeparator1;
    // End of variables declaration//GEN-END:variables

public String chooseFile(){
    JFileChooser chooser = new JFileChooser();
        //chooser.setApproveButtonText("Run Application");
        int res = chooser.showDialog(this, null);
        selectedFilePath = null;
        switch(res){
            case JFileChooser.CANCEL_OPTION:
                //System.out.println("Cancel");
                
                break;
            case JFileChooser.APPROVE_OPTION:
                selectedFilePath = chooser.getSelectedFile().getPath();
               // System.out.println("APROVE selected:"+ selectedFilePath);
                
                break;
            default: 
                System.out.println("mtable2.ui.ToolsJDialog.schooseFile() : OTHER");
                      
        }
        return selectedFilePath;
    }

//=======
}
